<script src="~/Scripts/UIAndDataValidation/BookBorrowViewScript.js"></script>

@model DataViewModels.ItemBorrowView


@using (Html.BeginForm("BookBorrow","Book",FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.ItemID)
        @Html.HiddenFor(model => model.LibraryLocationID)
        @Html.HiddenFor(model => model.BorrowStatus)

        <div class="form-group">
            @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemPartyID, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ItemPartyID, new SelectList(Model.PartyName, "ItemPartyID", "PartyName"), htmlAttributes: new { @class = "form-control" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BorrowDate, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BorrowDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BorrowDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BorrowedForHowManyDays, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BorrowedForHowManyDays, new SelectList(Model.BorrowDay, "NumberOfDays", "NumberOfDays"), htmlAttributes: new { @class = "form-control" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CalculatedReturnDate, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CalculatedReturnDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
